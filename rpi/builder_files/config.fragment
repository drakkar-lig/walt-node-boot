# The command must not contain double quotes, which is quite limitating.
# Here are the steps we are doing:
# - computing the node_model variable given the fact the fdtfile variable
#   has the form "bcm<...>-<node_model>.dtb". <node_model> is for instance
#   rpi-2-b or rpi-b-plus. Since it is not possible to use double quotes,
#   we cannot write an empty replacement patterns (i.e, ""), but we leverage
#   the fact all models start with a 'r' and end with a 'b', a 's' or a '0'
#   (e.g, rpi-b, rpi-3-b-plus, rpi-400).
# - we set the bootp_vci according to the node model and start the DHCP + TFTP
#   transfers. We first try to download a FIT image 'fit.uboot', allowing to
#   reduce the procedure to this single network file transfer. It this works,
#   we call the script embedded in this FIT image. Otherwise, for older images,
#   we fallback to the legacy procedure based on start.uboot.


CONFIG_BOOTCOMMAND="setenv node_model $fdtfile; setexpr node_model sub [^-]*-r r; setexpr node_model sub b.dtb b || setexpr node_model sub s.dtb s || setexpr node_model sub 0.dtb 0; setenv bootp_vci walt.node.$node_model; setenv has_fit 1; if dhcp ${scriptaddr} start.uboot; then source ${scriptaddr} || reset; else reset; fi"

# Disallow interrupting the boot by pressing a key (value = -2).
# When linking the serial line of two raspberry pi boards, for letting one board
# monitor the serial line of the other, u-boot could be interrupted by serial logs
# written by the other board.
CONFIG_BOOTDELAY=-2

# Up to now (january 2022), default configs for rpi boards embed the device tree
# inside the u-boot binary. This causes issues when one wants to change device tree
# configuration in config.txt, for instance by adding "dtoverlay=<overlay>". In this
# default configuration, since u-boot has its own embedded device tree, such a change
# in the device tree will not be seen by u-boot, which may cause problems (boot hanging,
# perhaps when trying to initialize devices that have been disabled or configured
# differently).
# The following setting allows to let the board firmware properly pass the device tree
# to u-boot.

# CONFIG_OF_EMBED is not set
CONFIG_OF_BOARD=y

# If ever u-boot starts a command line shell, reset the board to retry booting
# after 15 seconds have passed and no input command was typed.
CONFIG_BOOT_RETRY=y
CONFIG_BOOT_RETRY_TIME=15
CONFIG_BOOT_RETRY_MIN=15
CONFIG_RESET_TO_RETRY=y

# We enable FIT images.
CONFIG_FIT=y
CONFIG_FIT_VERBOSE=y

# We enable the board watchdog
CONFIG_WATCHDOG=y
CONFIG_WATCHDOG_AUTOSTART=y
CONFIG_WATCHDOG_TIMEOUT_MSECS=15000
CONFIG_WDT=y
CONFIG_WDT_BCM2835=y

# We add a few shell commands
CONFIG_CMD_WDT=y

# Note (october 2023): we disabled WGET and TCP because the implementation is
# too minimalistic and broken. Notably, the code manages a single state machine,
# for all connections; a given connection may be interrupted by an unrelated
# RST packet sent by the server. This is the case for instance after a "walt
# node reboot", when the keepalive setting of the connection established for
# bootup notification the last time the node was up reaches its timeout.
# And it is even worse: such a TCP RST packet will make any network operation
# fail, even if this operation, such as a TFTP transfer, is UDP-based!
# To make it clear: as of now, october 2023, activating WGET activates TCP
# which will cause this kind of problems *even if wget is actually not used*.
# If re-enabling this, in the future, add "setenv has_wget 1" to CONFIG BOOTCOMMAND.

# CONFIG_CMD_WGET is not set
# This option improves wget transfer speed
#CONFIG_PROT_TCP_SACK=y
